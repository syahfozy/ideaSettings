<application>
  <component name="IntentionManagerSettings">
    <ignoreAction name="AI Assistant/AI Actions..." />
    <ignoreAction name="CSS/Apply width and height of background image" />
    <ignoreAction name="CSS/Change color" />
    <ignoreAction name="CSS/Convert color to #-hex" />
    <ignoreAction name="CSS/Convert color to gray()" />
    <ignoreAction name="CSS/Convert color to hsl()" />
    <ignoreAction name="CSS/Convert color to hwb()" />
    <ignoreAction name="CSS/Convert color to lch()" />
    <ignoreAction name="CSS/Convert color to oklch()" />
    <ignoreAction name="CSS/Convert color to rgb()" />
    <ignoreAction name="CSS/Create selector" />
    <ignoreAction name="CSS/Expand shorthand property" />
    <ignoreAction name="CSS/Extract image" />
    <ignoreAction name="CSS/Extract inline CSS" />
    <ignoreAction name="CSS/Extract ruleset" />
    <ignoreAction name="CSS/Replace quotes" />
    <ignoreAction name="CSS/Replace var() with its fallback value" />
    <ignoreAction name="CSS/Replace with color name" />
    <ignoreAction name="Cucumber/Convert scenario to outline" />
    <ignoreAction name="Docker/Pull Docker image" />
    <ignoreAction name="EditorConfig/Add declaration part" />
    <ignoreAction name="EditorConfig/Invert option value" />
    <ignoreAction name="Flow JS/Specify variable type explicitly" />
    <ignoreAction name="FreeMarker/Change macro call style" />
    <ignoreAction name="FreeMarker/Create dynamic method or property" />
    <ignoreAction name="FreeMarker/Create macro or function from usage" />
    <ignoreAction name="FreeMarker/Define implicit variable in comment" />
    <ignoreAction name="FreeMarker/Define template root" />
    <ignoreAction name="FreeMarker/Specify class to take toplevel properties and methods from" />
    <ignoreAction name="Groovy/Grab" />
    <ignoreAction name="Groovy/Closures/Make closure call explicit" />
    <ignoreAction name="Groovy/Closures/Make closure call implicit" />
    <ignoreAction name="Groovy/Closures/Replace each with for-in" />
    <ignoreAction name="Groovy/Closures/Replace for-in with each" />
    <ignoreAction name="Groovy/Comments/Replace with C-style comment" />
    <ignoreAction name="Groovy/Control flow/Add constructor parameter for field" />
    <ignoreAction name="Groovy/Control flow/DeMorgan's law" />
    <ignoreAction name="Groovy/Control flow/Expand boolean" />
    <ignoreAction name="Groovy/Control flow/Flip comparison operands" />
    <ignoreAction name="Groovy/Control flow/Flip conditional" />
    <ignoreAction name="Groovy/Control flow/Flip conjunction operands" />
    <ignoreAction name="Groovy/Control flow/Flip if statements" />
    <ignoreAction name="Groovy/Control flow/Invert 'if' condition" />
    <ignoreAction name="Groovy/Control flow/Merge else if" />
    <ignoreAction name="Groovy/Control flow/Merge nested ifs to and-ed condition" />
    <ignoreAction name="Groovy/Control flow/Negate comparison" />
    <ignoreAction name="Groovy/Control flow/Remove redundant 'else' keyword" />
    <ignoreAction name="Groovy/Control flow/Replace '?:' with if else" />
    <ignoreAction name="Groovy/Control flow/Replace if-statement with ternary operator" />
    <ignoreAction name="Groovy/Control flow/Simplify conditional expression" />
    <ignoreAction name="Groovy/Control flow/Split else if" />
    <ignoreAction name="Groovy/Control flow/Split into 2 'if' statements" />
    <ignoreAction name="Groovy/Declaration/Create field for parameter" />
    <ignoreAction name="Groovy/Declaration/Declare explicit type" />
    <ignoreAction name="Groovy/Declaration/Implement abstract class or interface" />
    <ignoreAction name="Groovy/Declaration/Introduce local variable" />
    <ignoreAction name="Groovy/Declaration/Make 'private'" />
    <ignoreAction name="Groovy/Declaration/Make 'protected'" />
    <ignoreAction name="Groovy/Declaration/Make 'public'" />
    <ignoreAction name="Groovy/Declaration/Remove explicit type declaration" />
    <ignoreAction name="Groovy/Expression conversions/Break string on '\n'" />
    <ignoreAction name="Groovy/Expression conversions/Cast to char" />
    <ignoreAction name="Groovy/Expression conversions/Convert GString to String" />
    <ignoreAction name="Groovy/Expression conversions/Convert JUnit assertion to assert statement" />
    <ignoreAction name="Groovy/Expression conversions/Convert [] form to index method" />
    <ignoreAction name="Groovy/Expression conversions/Convert cast expression to safe cast expression" />
    <ignoreAction name="Groovy/Expression conversions/Convert groovy native map to class instances" />
    <ignoreAction name="Groovy/Expression conversions/Convert indexing method to [] form" />
    <ignoreAction name="Groovy/Expression conversions/Convert java-style array creation to groovy syntax" />
    <ignoreAction name="Groovy/Expression conversions/Convert literal to multiline literal" />
    <ignoreAction name="Groovy/Expression conversions/Convert method to property of closure type" />
    <ignoreAction name="Groovy/Expression conversions/Convert multiline string to single-line" />
    <ignoreAction name="Groovy/Expression conversions/Convert property to method" />
    <ignoreAction name="Groovy/Expression conversions/Convert simple getter to property" />
    <ignoreAction name="Groovy/Expression conversions/Convert string concatenation to GString" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to dollar-slashy string" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to regular expression" />
    <ignoreAction name="Groovy/Expression conversions/Convert to @CompileStatic" />
    <ignoreAction name="Groovy/Expression conversions/Convert to Binary" />
    <ignoreAction name="Groovy/Expression conversions/Convert to Decimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert to Hexadecimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert to Octal" />
    <ignoreAction name="Groovy/Expression conversions/Move class to separate file" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary braces in GString" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary escape characters" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary parentheses from method call" />
    <ignoreAction name="Groovy/Expression conversions/Rename class to corresponding file name" />
    <ignoreAction name="Groovy/Expression conversions/Rename file to corresponding class name" />
    <ignoreAction name="Groovy/Expression conversions/Split variable declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add explicit types for all parameters in method declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add on demand static import" />
    <ignoreAction name="Groovy/Groovy-style/Add return type to method declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add single-member static import" />
    <ignoreAction name="Groovy/Groovy-style/Change anonymous class to dynamic instantiation" />
    <ignoreAction name="Groovy/Groovy-style/Convert method or closure parameters to map entries" />
    <ignoreAction name="Groovy/Groovy-style/Format braces on separate lines" />
    <ignoreAction name="Groovy/Groovy-style/Format closing closure braces on one line" />
    <ignoreAction name="Groovy/Groovy-style/Remove redundant .class" />
    <ignoreAction name="Groovy/Groovy-style/Remove unnecessary 'return' keyword" />
    <ignoreAction name="Groovy/Other/Add 'value='" />
    <ignoreAction name="Groovy/Other/Alias import statically imported member" />
    <ignoreAction name="Groovy/Other/Copy string concatenation text to clipboard" />
    <ignoreAction name="Groovy/Other/Create missing 'switch' branches" />
    <ignoreAction name="Groovy/Other/Sort map entries alphabetically" />
    <ignoreAction name="HTML/Convert entity" />
    <ignoreAction name="HTML/Update image size" />
    <ignoreAction name="HTTP Client/Acquire or refresh Auth token" />
    <ignoreAction name="HTTP Client/Add GraphQL JSON variables block" />
    <ignoreAction name="HTTP Client/Convert to cURL and copy to clipboard" />
    <ignoreAction name="HTTP Client/Force acquire Auth token" />
    <ignoreAction name="HTTP Client/Generate request in HTTP Client" />
    <ignoreAction name="HTTP Client/Move HTTP Requests" />
    <ignoreAction name="HTTP Client/Put parameters on one line" />
    <ignoreAction name="HTTP Client/Put parameters on separate lines" />
    <ignoreAction name="HTTP Client/Set value for secured value" />
    <ignoreAction name="HTTP Client/Switch environment" />
    <ignoreAction name="JavaScript/Convert 'for-in' to 'forEach' call" />
    <ignoreAction name="JavaScript/Convert anonymous function to named function" />
    <ignoreAction name="JavaScript/Convert indexed 'for' to 'forEach' call" />
    <ignoreAction name="JavaScript/Convert parameters to object" />
    <ignoreAction name="JavaScript/Convert parameters to object and introduce interface" />
    <ignoreAction name="JavaScript/Convert to function expression" />
    <ignoreAction name="JavaScript/Edit values of object literal properties" />
    <ignoreAction name="JavaScript/Infer parameter types from usages" />
    <ignoreAction name="JavaScript/Install @types for the package" />
    <ignoreAction name="JavaScript/Introduce local variable" />
    <ignoreAction name="JavaScript/Join subsequent variable declarations" />
    <ignoreAction name="JavaScript/Remove quotes from property names" />
    <ignoreAction name="JavaScript/Replace with indexer access" />
    <ignoreAction name="JavaScript/Replace with property access" />
    <ignoreAction name="JavaScript/Split declarations" />
    <ignoreAction name="JavaScript/Wrap property names in quotes" />
    <ignoreAction name="JavaScript/Boolean/De Morgan's laws" />
    <ignoreAction name="JavaScript/Boolean/Flip comparison" />
    <ignoreAction name="JavaScript/Boolean/Flip conjunction operands" />
    <ignoreAction name="JavaScript/Boolean/Negate comparison" />
    <ignoreAction name="JavaScript/Boolean/Remove boolean equality" />
    <ignoreAction name="JavaScript/Comments/Move comment to separate line" />
    <ignoreAction name="JavaScript/Comments/Replace with JSDoc comment" />
    <ignoreAction name="JavaScript/Comments/Replace with a multiline comment" />
    <ignoreAction name="JavaScript/Comments/Replace with a single-line comment" />
    <ignoreAction name="JavaScript/Conditional Operator/Flip 'if'" />
    <ignoreAction name="JavaScript/Conditional Operator/Flip conditional" />
    <ignoreAction name="JavaScript/Conditional Operator/Replace 'if...else' with conditional" />
    <ignoreAction name="JavaScript/Conditional Operator/Replace conditional with 'if...else'" />
    <ignoreAction name="JavaScript/Control Flow/Add braces" />
    <ignoreAction name="JavaScript/Control Flow/Merge 'else-if'" />
    <ignoreAction name="JavaScript/Control Flow/Merge equivalent 'if' statements to '||' condition" />
    <ignoreAction name="JavaScript/Control Flow/Merge nested 'if' statements to '&amp;&amp;' condition" />
    <ignoreAction name="JavaScript/Control Flow/Merge parallel 'if' statements" />
    <ignoreAction name="JavaScript/Control Flow/Remove braces" />
    <ignoreAction name="JavaScript/Control Flow/Replace 'if' with 'switch'" />
    <ignoreAction name="JavaScript/Control Flow/Replace 'switch' with 'if'" />
    <ignoreAction name="JavaScript/Control Flow/Split '&amp;&amp;' condition to nested 'if' statements" />
    <ignoreAction name="JavaScript/Control Flow/Split 'else-if'" />
    <ignoreAction name="JavaScript/Control Flow/Split '||' condition to equivalent 'if' statements" />
    <ignoreAction name="JavaScript/Control Flow/Unwrap 'else'" />
    <ignoreAction name="JavaScript/Declaration/Split declaration and initialization" />
    <ignoreAction name="JavaScript/Declaration/Split declaration and move to scope start" />
    <ignoreAction name="JavaScript/ECMAScript 6/Add default export" />
    <ignoreAction name="JavaScript/ECMAScript 6/Add export" />
    <ignoreAction name="JavaScript/ECMAScript 6/Change ES6 import path" />
    <ignoreAction name="JavaScript/ECMAScript 6/Convert arrow function to anonymous function" />
    <ignoreAction name="JavaScript/ECMAScript 6/Convert function and its member declarations to class" />
    <ignoreAction name="JavaScript/ECMAScript 6/Convert template string to use visible line separators" />
    <ignoreAction name="JavaScript/ECMAScript 6/Convert to async function" />
    <ignoreAction name="JavaScript/ECMAScript 6/Convert to multi-line string template" />
    <ignoreAction name="JavaScript/ECMAScript 6/Create derived class / Implement interface" />
    <ignoreAction name="JavaScript/ECMAScript 6/Create getter" />
    <ignoreAction name="JavaScript/ECMAScript 6/Create getter and setter" />
    <ignoreAction name="JavaScript/ECMAScript 6/Create setter" />
    <ignoreAction name="JavaScript/ECMAScript 6/Declare explicit class fields" />
    <ignoreAction name="JavaScript/ECMAScript 6/Expand optional chaining or nullish coalescing to explicit checks" />
    <ignoreAction name="JavaScript/ECMAScript 6/Generate destructuring pattern" />
    <ignoreAction name="JavaScript/ECMAScript 6/Initialize new fields from parameters" />
    <ignoreAction name="JavaScript/ECMAScript 6/Insert template string argument" />
    <ignoreAction name="JavaScript/ECMAScript 6/Introduce object or array destructuring" />
    <ignoreAction name="JavaScript/ECMAScript 6/Iterate with 'for..of'" />
    <ignoreAction name="JavaScript/ECMAScript 6/Make 'public'" />
    <ignoreAction name="JavaScript/ECMAScript 6/Make private using '#'" />
    <ignoreAction name="JavaScript/ECMAScript 6/Move to a file with matching name" />
    <ignoreAction name="JavaScript/ECMAScript 6/Propagate to destructuring declaration" />
    <ignoreAction name="JavaScript/ECMAScript 6/Remove export" />
    <ignoreAction name="JavaScript/ECMAScript 6/Remove numeric separators" />
    <ignoreAction name="JavaScript/ECMAScript 6/Rename file to match type name" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace 'for..of' with indexed 'for' loop" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace 'forEach' with 'for..of' loop" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace 'forEach' with indexed 'for' loop" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace 'map' array call with 'for..of' loop" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace destructuring with property and index access" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace nested calls with pipeline expression" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace pipe expression with nested calls" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace with 'await Promise.all'" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace with array destructuring" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace with destructuring and short-hand properties" />
    <ignoreAction name="JavaScript/ECMAScript 6/Replace with object destructuring" />
    <ignoreAction name="JavaScript/ECMAScript 6/Separate digits" />
    <ignoreAction name="JavaScript/ECMAScript 6/Use optional chaining or nullish coalescing" />
    <ignoreAction name="JavaScript/JSX/Unwrap attribute value" />
    <ignoreAction name="JavaScript/JSX/Wrap attribute value with {}" />
    <ignoreAction name="JavaScript/Language Injection/Annotate injection with comment" />
    <ignoreAction name="JavaScript/Language Injection/Disable formatting for injected content" />
    <ignoreAction name="JavaScript/Numbers/Convert to binary" />
    <ignoreAction name="JavaScript/Numbers/Convert to decimal" />
    <ignoreAction name="JavaScript/Numbers/Convert to hexadecimal" />
    <ignoreAction name="JavaScript/Numbers/Convert to octal" />
    <ignoreAction name="JavaScript/Numbers/Flip operands of an arithmetic operation" />
    <ignoreAction name="JavaScript/Other/Compute constant value" />
    <ignoreAction name="JavaScript/Other/Compute constant value of sub-expression" />
    <ignoreAction name="JavaScript/Other/Convert to operator assignment" />
    <ignoreAction name="JavaScript/Other/Extract increment" />
    <ignoreAction name="JavaScript/Other/Replace double-quoted string with single-quoted string" />
    <ignoreAction name="JavaScript/Other/Replace single-quoted string with double-quoted string" />
    <ignoreAction name="JavaScript/Other/Sort properties alphabetically" />
    <ignoreAction name="JavaScript/Shift Operation/Replace multiply with shift" />
    <ignoreAction name="JavaScript/Shift Operation/Replace shift with multiply" />
    <ignoreAction name="JSP/Replace with JSP comment" />
    <ignoreAction name="Kotlin/Add '@JvmOverloads' annotation" />
    <ignoreAction name="Kotlin/Add '@JvmStatic' annotation" />
    <ignoreAction name="Kotlin/Add '@Throws' annotation" />
    <ignoreAction name="Kotlin/Add 'val' or 'var' to a primary constructor parameter" />
    <ignoreAction name="Kotlin/Add braces" />
    <ignoreAction name="Kotlin/Add braces to all branches" />
    <ignoreAction name="Kotlin/Add explicit type arguments" />
    <ignoreAction name="Kotlin/Add full qualifier" />
    <ignoreAction name="Kotlin/Add getter" />
    <ignoreAction name="Kotlin/Add getter and setter" />
    <ignoreAction name="Kotlin/Add import for member" />
    <ignoreAction name="Kotlin/Add indices to 'for' loop" />
    <ignoreAction name="Kotlin/Add labeled return to the last expression in a lambda" />
    <ignoreAction name="Kotlin/Add missing 'class' keyword" />
    <ignoreAction name="Kotlin/Add missing destructuring component" />
    <ignoreAction name="Kotlin/Add name to the argument" />
    <ignoreAction name="Kotlin/Add names in comment to call arguments" />
    <ignoreAction name="Kotlin/Add names to call arguments" />
    <ignoreAction name="Kotlin/Add names to this argument and all following arguments" />
    <ignoreAction name="Kotlin/Add remaining branches" />
    <ignoreAction name="Kotlin/Add setter" />
    <ignoreAction name="Kotlin/Add underscores" />
    <ignoreAction name="Kotlin/Add use-site target" />
    <ignoreAction name="Kotlin/Change package" />
    <ignoreAction name="Kotlin/Convert Boolean? == const to elvis" />
    <ignoreAction name="Kotlin/Convert Collection constructor to function" />
    <ignoreAction name="Kotlin/Convert anonymous function to a lambda expression" />
    <ignoreAction name="Kotlin/Convert argument to 'Set'" />
    <ignoreAction name="Kotlin/Convert concatenation to 'buildString' call" />
    <ignoreAction name="Kotlin/Convert concatenation to template" />
    <ignoreAction name="Kotlin/Convert function to property" />
    <ignoreAction name="Kotlin/Convert function type parameter to receiver" />
    <ignoreAction name="Kotlin/Convert function type receiver to parameter" />
    <ignoreAction name="Kotlin/Convert lambda expression to anonymous function" />
    <ignoreAction name="Kotlin/Convert member to extension" />
    <ignoreAction name="Kotlin/Convert object literal to class" />
    <ignoreAction name="Kotlin/Convert parameter to receiver" />
    <ignoreAction name="Kotlin/Convert property getter to initializer" />
    <ignoreAction name="Kotlin/Convert property initializer to getter" />
    <ignoreAction name="Kotlin/Convert property to function" />
    <ignoreAction name="Kotlin/Convert receiver to parameter" />
    <ignoreAction name="Kotlin/Convert template to concatenated string" />
    <ignoreAction name="Kotlin/Convert to 'buildString' call" />
    <ignoreAction name="Kotlin/Convert to 'trimIndent()' call" />
    <ignoreAction name="Kotlin/Convert to 'trimMargin()' call" />
    <ignoreAction name="Kotlin/Convert to also" />
    <ignoreAction name="Kotlin/Convert to anonymous object" />
    <ignoreAction name="Kotlin/Convert to apply" />
    <ignoreAction name="Kotlin/Convert to array parameter" />
    <ignoreAction name="Kotlin/Convert to block body" />
    <ignoreAction name="Kotlin/Convert to comparisons" />
    <ignoreAction name="Kotlin/Convert to enum class" />
    <ignoreAction name="Kotlin/Convert to indexed function call" />
    <ignoreAction name="Kotlin/Convert to lateinit var" />
    <ignoreAction name="Kotlin/Convert to lazy property" />
    <ignoreAction name="Kotlin/Convert to multi-line lambda" />
    <ignoreAction name="Kotlin/Convert to nullable var" />
    <ignoreAction name="Kotlin/Convert to object declaration" />
    <ignoreAction name="Kotlin/Convert to ordinary property" />
    <ignoreAction name="Kotlin/Convert to ordinary string literal" />
    <ignoreAction name="Kotlin/Convert to primary constructor" />
    <ignoreAction name="Kotlin/Convert to raw string literal" />
    <ignoreAction name="Kotlin/Convert to run" />
    <ignoreAction name="Kotlin/Convert to sealed class" />
    <ignoreAction name="Kotlin/Convert to secondary constructor" />
    <ignoreAction name="Kotlin/Convert to single-line lambda" />
    <ignoreAction name="Kotlin/Convert to unsafe cast" />
    <ignoreAction name="Kotlin/Convert to unsafeCast() call" />
    <ignoreAction name="Kotlin/Convert to vararg parameter" />
    <ignoreAction name="Kotlin/Convert to with" />
    <ignoreAction name="Kotlin/Converts the assignment statement to an expression" />
    <ignoreAction name="Kotlin/Copy concatenation text to clipboard" />
    <ignoreAction name="Kotlin/Create Kotlin subclass" />
    <ignoreAction name="Kotlin/Create test" />
    <ignoreAction name="Kotlin/DeMorgan Law" />
    <ignoreAction name="Kotlin/Enable/disable a trailing comma in the formatter" />
    <ignoreAction name="Kotlin/Evaluate compile-time expression" />
    <ignoreAction name="Kotlin/Expand boolean expression to 'if else'" />
    <ignoreAction name="Kotlin/Extract declaration from current file" />
    <ignoreAction name="Kotlin/Flatten 'when' expression" />
    <ignoreAction name="Kotlin/Flip 'equals'" />
    <ignoreAction name="Kotlin/Flip binary expression" />
    <ignoreAction name="Kotlin/Implement abstract member" />
    <ignoreAction name="Kotlin/Import members with '*'" />
    <ignoreAction name="Kotlin/Indent raw string" />
    <ignoreAction name="Kotlin/Inline 'when' argument" />
    <ignoreAction name="Kotlin/Insert curly braces around variable" />
    <ignoreAction name="Kotlin/Introduce backing property" />
    <ignoreAction name="Kotlin/Introduce import alias" />
    <ignoreAction name="Kotlin/Introduce local variable" />
    <ignoreAction name="Kotlin/Invert 'if' condition" />
    <ignoreAction name="Kotlin/Iterate over collection" />
    <ignoreAction name="Kotlin/Join declaration and assignment" />
    <ignoreAction name="Kotlin/Lift function call out of 'if'" />
    <ignoreAction name="Kotlin/Lift function call out of 'when'" />
    <ignoreAction name="Kotlin/Make 'open'" />
    <ignoreAction name="Kotlin/Make internal" />
    <ignoreAction name="Kotlin/Make private" />
    <ignoreAction name="Kotlin/Make protected" />
    <ignoreAction name="Kotlin/Make public" />
    <ignoreAction name="Kotlin/Merge 'else if'" />
    <ignoreAction name="Kotlin/Merge 'if's" />
    <ignoreAction name="Kotlin/Move lambda argument into parentheses" />
    <ignoreAction name="Kotlin/Move out of companion object" />
    <ignoreAction name="Kotlin/Move to 'build' &gt; 'sourceDirectory' tag" />
    <ignoreAction name="Kotlin/Move to 'compile' execution" />
    <ignoreAction name="Kotlin/Move to class body" />
    <ignoreAction name="Kotlin/Move to companion object" />
    <ignoreAction name="Kotlin/Move to constructor" />
    <ignoreAction name="Kotlin/Move to top level" />
    <ignoreAction name="Kotlin/Put arguments on one line" />
    <ignoreAction name="Kotlin/Put arguments on separate lines" />
    <ignoreAction name="Kotlin/Put calls on separate lines" />
    <ignoreAction name="Kotlin/Put expressions on separate lines" />
    <ignoreAction name="Kotlin/Put parameters on one line" />
    <ignoreAction name="Kotlin/Put parameters on separate lines" />
    <ignoreAction name="Kotlin/Remove all argument names" />
    <ignoreAction name="Kotlin/Remove argument name" />
    <ignoreAction name="Kotlin/Remove braces" />
    <ignoreAction name="Kotlin/Remove braces from all branches" />
    <ignoreAction name="Kotlin/Remove explicit lambda parameter types (may break code)" />
    <ignoreAction name="Kotlin/Remove explicit type specification" />
    <ignoreAction name="Kotlin/Remove labeled return from last expression in a lambda" />
    <ignoreAction name="Kotlin/Remove single-expression string template" />
    <ignoreAction name="Kotlin/Remove underscores" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses" />
    <ignoreAction name="Kotlin/Rename class to containing file name" />
    <ignoreAction name="Kotlin/Rename file to match top-level class name" />
    <ignoreAction name="Kotlin/Replace '!!' expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace '_' with explicit type" />
    <ignoreAction name="Kotlin/Replace '_' with parameter name" />
    <ignoreAction name="Kotlin/Replace 'any' with 'all' and vice versa" />
    <ignoreAction name="Kotlin/Replace 'any' with 'none' and vice versa" />
    <ignoreAction name="Kotlin/Replace 'contains' call with 'in' operator" />
    <ignoreAction name="Kotlin/Replace 'if' expression with return" />
    <ignoreAction name="Kotlin/Replace 'if' with 'when'" />
    <ignoreAction name="Kotlin/Replace 'invoke' with direct call" />
    <ignoreAction name="Kotlin/Replace 'it' with explicit parameter" />
    <ignoreAction name="Kotlin/Replace 'when' with 'if'" />
    <ignoreAction name="Kotlin/Replace assignment with 'if' expression" />
    <ignoreAction name="Kotlin/Replace assignment with 'when' expression" />
    <ignoreAction name="Kotlin/Replace by reconstructed type" />
    <ignoreAction name="Kotlin/Replace call with unary operator" />
    <ignoreAction name="Kotlin/Replace camel-case name with spaces" />
    <ignoreAction name="Kotlin/Replace elvis expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace explicit lambda parameter with 'it'" />
    <ignoreAction name="Kotlin/Replace explicit type with '_'" />
    <ignoreAction name="Kotlin/Replace function call with 'if'" />
    <ignoreAction name="Kotlin/Replace function call with 'when'" />
    <ignoreAction name="Kotlin/Replace function call with the opposite" />
    <ignoreAction name="Kotlin/Replace infix call with ordinary call" />
    <ignoreAction name="Kotlin/Replace overloaded operator with function call" />
    <ignoreAction name="Kotlin/Replace property initializer with 'if' expression" />
    <ignoreAction name="Kotlin/Replace property initializer with 'when' expression" />
    <ignoreAction name="Kotlin/Replace return with 'if' expression" />
    <ignoreAction name="Kotlin/Replace return with 'when' expression" />
    <ignoreAction name="Kotlin/Replace safe access expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace snake_case name with spaces" />
    <ignoreAction name="Kotlin/Replace with '+='" />
    <ignoreAction name="Kotlin/Replace with '..' operator" />
    <ignoreAction name="Kotlin/Replace with a 'for' loop" />
    <ignoreAction name="Kotlin/Replace with a 'forEach' function call" />
    <ignoreAction name="Kotlin/Replace with block comment" />
    <ignoreAction name="Kotlin/Replace with end of line comment" />
    <ignoreAction name="Kotlin/Replace with indexing and elvis operator" />
    <ignoreAction name="Kotlin/Replace with infix function call" />
    <ignoreAction name="Kotlin/Replace with ordinary assignment" />
    <ignoreAction name="Kotlin/Simplify boolean expression" />
    <ignoreAction name="Kotlin/Specify all types explicitly in destructuring declaration" />
    <ignoreAction name="Kotlin/Specify explicit lambda signature" />
    <ignoreAction name="Kotlin/Specify type explicitly" />
    <ignoreAction name="Kotlin/Split 'if' into two" />
    <ignoreAction name="Kotlin/Split property declaration" />
    <ignoreAction name="Kotlin/Use destructuring declaration" />
  </component>
</application>